version: "2.0"

nlu:
- intent: greet
  examples: |
    - hey
    - hello
    - hi
    - hello there
    - good morning
    - good evening
    - moin
    - hey there
    - let's go
    - hey dude
    - goodmorning
    - goodevening
    - good afternoon

- intent: goodbye
  examples: |
    - good afternoon
    - cu
    - good by
    - cee you later
    - good night
    - bye
    - goodbye
    - have a nice day
    - see you around
    - bye bye
    - see you later

- intent: inform
  examples: |
    - [Sitka](location)
    - [Juneau](location)
    - [Virginia](location)
    - [Cusseta](location)
    - [Chicago](location)
    - [Tuscon](location)
    - [Columbus](location)
    - [San Francisco](location)

- intent: search_provider
  examples: |
    - I need a [hospital](facility_type)
    - find me a near by [hospital](facility_type)
    - show me a [home health agencies](facility_type)
    - [hospital](facility_type)
    - find me a nearby [hospital](facility_type) in [San Francisco](location)
    - I need a [home health agency](facility_type)


- intent: affirm
  examples: |
    - yes
    - y
    - indeed
    - of course
    - that sounds good
    - correct

- intent: deny
  examples: |
    - no
    - n
    - never
    - I don't think so
    - don't like that
    - no way
    - not really

- intent: mood_great
  examples: |
    - perfect
    - great
    - amazing
    - feeling like a king
    - wonderful
    - I am feeling very good
    - I am great
    - I am amazing
    - I am going to save the world
    - super stoked
    - extremely good
    - so so perfect
    - so good
    - so perfect

- intent: mood_unhappy
  examples: |
    - my day was horrible
    - I am sad
    - I don't feel very well
    - I am disappointed
    - super sad
    - I'm so sad
    - sad
    - very sad
    - unhappy
    - not good
    - not very good
    - extremly sad
    - so saad
    - so sad

- intent: bot_challenge
  examples: |
    - are you a bot?
    - are you a human?
    - am I talking to a bot?
    - am I talking to a human?

- intent: list_docker_images
  examples: |
    - [show me](containerization_app_command) the [list](containerization_app_command) of all [images](containerization_app_feature) in [docker](containerization_app)
    - let see the [images](containerization_app_feature) available in [docker](containerization_app)
    - [docker](containerization_app) [images](containerization_app_feature)
    - is there any [images](containerization_app_feature) available
    - [give me](containerization_app_command) the [list](containerization_app_command) of all the [images](containerization_app_feature) present in the [docker](containerization_app)
    - provide the [list](containerization_app_command) of [images](containerization_app_feature)
    - [docker](containerization_app) [images](containerization_app_feature) [list](containerization_app_command)
    - [images](containerization_app_feature)
    - do we have [list](containerization_app_command) of [images](containerization_app_feature) in [docker](containerization_app)
    - [containers](containerization_app_feature) [list](containerization_app_command) in [docker](containerization_app)
    - [show me](containerization_app_command) list of all the [containers](containerization_app_feature) running in [docker](containerization_app)
    - [containers](containerization_app_feature) [docker](containerization_app) list
    - [show all](containerization_app_command) the [containers](containerization_app_feature) in [docker](containerization_app)
    - provide me [list](containerization_app_command) of [containers](containerization_app_feature) in [docker](containerization_app)
    - [show me list](containerization_app_command) of [containers](containerization_app_feature) and [images](containerization_app_feature) in [docker](containerization_app)
    - give me [all](containerization_app_command) the [containers](containerization_app_feature) and [images](containerization_app_feature) in [docker](containerization_app)
    - [show all](containerization_app_command) [containers](containerization_app_feature) and [images](containerization_app_feature)

- intent: open_docker_cli
  examples: |
    - [open](containerization_app_command) [docker](containerization_app) [cli](containerization_app_prompt:cli) for [kafka](container_name) [container](containerization_app_feature)
    - help me to [open](containerization_app_command) [command line interface](containerization_app_prompt:cli) on [cluster](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [consul](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [open](containerization_app_command) a [bash terminal](containerization_app_prompt:cli) for the [consul](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - please [launch](containerization_app_command) the web page of the [cluster](container_name) [container](containerization_app_feature) in [google chrome](containerization_app_prompt:web)
    - [start](containerization_app_command) the [rabbit mq](container_name) [container](containerization_app_feature) [cli](containerization_app_prompt:cli)
    - [start](containerization_app_command) [service mock](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - we need to [start](containerization_app_command) the [terminal](containerization_app_prompt:cli) on the [cluster eleven](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [cluster](container_name) [container](containerization_app_feature) [cli](containerization_app_prompt:cli)
    - [open](containerization_app_command) the [ic cluster 11](container_name) [container](containerization_app_feature) in [chrome browser](containerization_app_prompt:web) 
    - we need to [start](containerization_app_command) the [terminal](containerization_app_prompt:cli) on the [ic cluster 11](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [rabbit mq](container_name) [container](containerization_app_feature) [terminal](containerization_app_prompt:cli)
    - [open](containerization_app_command) [ic cluster 11](container_name) [container](containerization_app_feature) [command line interface](containerization_app_prompt:cli)
    - i want to [open](containerization_app_command) a [cli](containerization_app_prompt:cli) for [serene shockly](container_name) [container](containerization_app_feature)
    - we need to [start](containerization_app_command) the [terminal](containerization_app_prompt:cli) on the [consul](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [ic cluster 11](container_name) [container](containerization_app_feature) [terminal](containerization_app_prompt:cli)
    - [open](containerization_app_command) [web page](containerization_app_prompt:web) of the [ic cluster 11](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [docker](containerization_app) [cli](containerization_app_prompt:cli) for [consul](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [docker](containerization_app) [rabbit](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - please [start](containerization_app_command) [command line interface](containerization_app_prompt:cli) for the [cluster eleven](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - please [launch](containerization_app_command) the web page of the [ic cluster 11](container_name) [container](containerization_app_feature) in [google chrome](containerization_app_prompt:web)
    - [start](containerization_app_command) the [nginx](container_name) [container](containerization_app_feature) [cli](containerization_app_prompt:cli)
    - [start](containerization_app_command) the [web page](containerization_app_prompt:web) for the [consul](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) the [kafka](container_name) [container](containerization_app_feature) in [chrome browser](containerization_app_prompt:web) 
    - [docker](containerization_app) [container](containerization_app_feature) [cli](containerization_app_prompt:cli) [open](containerization_app_command) for [rabbit mq](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [cluster](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [open](containerization_app_command) [terminal](containerization_app_prompt:cli) on [cluster](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) [serene shockly](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [open](containerization_app_command) [rabbit](container_name) [container](containerization_app_feature) in [chrome](containerization_app_prompt:web)
    - please [launch](containerization_app_command) the web page of the [rabbit](container_name) [container](containerization_app_feature) in [google chrome](containerization_app_prompt:web)
    - [start](containerization_app_command) the [web page](containerization_app_prompt:web) for the [cluster eleven](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [docker](containerization_app) [cluster eleven](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - we need to [start](containerization_app_command) the [terminal](containerization_app_prompt:cli) on the [kafka](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) [command prompt](containerization_app_prompt:cli) for the [rabbit](container_name) [container](containerization_app_feature)
    - [launch](containerization_app_command) the [kafka](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [start](containerization_app_command) [cluster eleven](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [open](containerization_app_command) [terminal](containerization_app_prompt:cli) on [cluster eleven](container_name) [container](containerization_app_feature)
    - [docker](containerization_app) [container](containerization_app_feature) [cli](containerization_app_prompt:cli) [open](containerization_app_command) for [service mock](container_name) [container](containerization_app_feature)
    - please [launch](containerization_app_command) the web page of the [nginx](container_name) [container](containerization_app_feature) in [google chrome](containerization_app_prompt:web)
    - [start](containerization_app_command) the [consul](container_name) [container](containerization_app_feature) [cli](containerization_app_prompt:cli)
    - [open](containerization_app_command) a [bash terminal](containerization_app_prompt:cli) for the [kafka](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - [start](containerization_app_command) the [consul](container_name) [container](containerization_app_feature) [terminal](containerization_app_prompt:cli)
    - [open](containerization_app_command) [web page](containerization_app_prompt:web) of the [cluster eleven](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [cluster eleven](container_name) [container](containerization_app_feature) [cli](containerization_app_prompt:cli)
    - [docker](containerization_app) [container](containerization_app_feature) [cli](containerization_app_prompt:cli) [open](containerization_app_command) for [cluster](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) a [bash terminal](containerization_app_prompt:cli) for the [serene shockly](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - i want to [open](containerization_app_command) a [cli](containerization_app_prompt:cli) for [rabbit mq](container_name) [container](containerization_app_feature)
    - please [start](containerization_app_command) [command line interface](containerization_app_prompt:cli) for the [rabbit mq](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - [start](containerization_app_command) [consul](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - please [launch](containerization_app_command) the web page of the [serene shockly](container_name) [container](containerization_app_feature) in [google chrome](containerization_app_prompt:web)
    - [open](containerization_app_command) a [bash terminal](containerization_app_prompt:cli) for the [cluster](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - [open](containerization_app_command) [docker](containerization_app) [cli](containerization_app_prompt:cli) for [service mock](container_name) [container](containerization_app_feature)
    - help me to [open](containerization_app_command) [command line interface](containerization_app_prompt:cli) on [consul](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [docker](containerization_app) [kafka](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [start](containerization_app_command) the [kafka](container_name) [container](containerization_app_feature) [terminal](containerization_app_prompt:cli)
    - [open](containerization_app_command) [docker](containerization_app) [cli](containerization_app_prompt:cli) for [serene shockly](container_name) [container](containerization_app_feature)
    - please [launch](containerization_app_command) the web page of the [service mock](container_name) [container](containerization_app_feature) in [google chrome](containerization_app_prompt:web)
    - [launch](containerization_app_command) the [consul](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - please [start](containerization_app_command) [command line interface](containerization_app_prompt:cli) for the [consul](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - [open](containerization_app_command) the [rabbit mq](container_name) [container](containerization_app_feature) in [chrome browser](containerization_app_prompt:web) 
    - [open](containerization_app_command) [kafka](container_name) [container](containerization_app_feature) [command line interface](containerization_app_prompt:cli)
    - [launch](containerization_app_command) the [cluster eleven](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [open](containerization_app_command) [docker](containerization_app) [rabbit mq](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [open](containerization_app_command) [docker](containerization_app) [cli](containerization_app_prompt:cli) for [rabbit](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) [command prompt](containerization_app_prompt:cli) for the [cluster](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [nginx](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - i want to [open](containerization_app_command) a [cli](containerization_app_prompt:cli) for [consul](container_name) [container](containerization_app_feature)
    - please [start](containerization_app_command) [command line interface](containerization_app_prompt:cli) for the [rabbit](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - help me to [open](containerization_app_command) [command line interface](containerization_app_prompt:cli) on [kafka](container_name) [container](containerization_app_feature)
    - help me to [open](containerization_app_command) [command line interface](containerization_app_prompt:cli) on [cluster eleven](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) [cluster](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [launch](containerization_app_command) the [serene shockly](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [open](containerization_app_command) [consul](container_name) [container](containerization_app_feature) in [chrome](containerization_app_prompt:web)
    - please [launch](containerization_app_command) the web page of the [cluster eleven](container_name) [container](containerization_app_feature) in [google chrome](containerization_app_prompt:web)
    - [open](containerization_app_command) [serene shockly](container_name) [container](containerization_app_feature) in [chrome](containerization_app_prompt:web)
    - [start](containerization_app_command) the [web page](containerization_app_prompt:web) for the [ic cluster 11](container_name) [container](containerization_app_feature)
    - [docker](containerization_app) [container](containerization_app_feature) [cli](containerization_app_prompt:cli) [open](containerization_app_command) for [nginx](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) [command prompt](containerization_app_prompt:cli) for the [consul](container_name) [container](containerization_app_feature)
    - [launch](containerization_app_command) the [ic cluster 11](container_name) [container](containerization_app_feature) in [google](containerization_app_prompt:web)
    - [launch](containerization_app_command) the [kafka](container_name) [container](containerization_app_feature) in [google](containerization_app_prompt:web)
    - [start](containerization_app_command) the [rabbit](container_name) [container](containerization_app_feature) [cli](containerization_app_prompt:cli)
    - [start](containerization_app_command) the [web page](containerization_app_prompt:web) for the [rabbit](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [ic cluster 11](container_name) [container](containerization_app_feature) [cli](containerization_app_prompt:cli)
    - [start](containerization_app_command) the [cluster](container_name) [container](containerization_app_feature) [terminal](containerization_app_prompt:cli)
    - [open](containerization_app_command) the [rabbit](container_name) [container](containerization_app_feature) in [chrome browser](containerization_app_prompt:web) 
    - [open](containerization_app_command) a [bash terminal](containerization_app_prompt:cli) for the [service mock](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - [launch](containerization_app_command) the [cluster eleven](container_name) [container](containerization_app_feature) in [google](containerization_app_prompt:web)
    - [open](containerization_app_command) [service mock](container_name) [container](containerization_app_feature) [command line interface](containerization_app_prompt:cli)
    - [start](containerization_app_command) the [serene shockly](container_name) [container](containerization_app_feature) [terminal](containerization_app_prompt:cli)
    - [open](containerization_app_command) the [nginx](container_name) [container](containerization_app_feature) in [chrome browser](containerization_app_prompt:web) 
    - please [start](containerization_app_command) [command line interface](containerization_app_prompt:cli) for the [nginx](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - please [start](containerization_app_command) [command line interface](containerization_app_prompt:cli) for the [kafka](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - [open](containerization_app_command) [docker](containerization_app) [cli](containerization_app_prompt:cli) for [cluster](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) [command prompt](containerization_app_prompt:cli) for the [kafka](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [service mock](container_name) [container](containerization_app_feature) [terminal](containerization_app_prompt:cli)
    - [open](containerization_app_command) [terminal](containerization_app_prompt:cli) on [consul](container_name) [container](containerization_app_feature)
    - help me to [open](containerization_app_command) [command line interface](containerization_app_prompt:cli) on [rabbit mq](container_name) [container](containerization_app_feature)
    - please [start](containerization_app_command) [command line interface](containerization_app_prompt:cli) for the [ic cluster 11](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - [open](containerization_app_command) [terminal](containerization_app_prompt:cli) on [kafka](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [consul](container_name) [container](containerization_app_feature) [command line interface](containerization_app_prompt:cli)
    - [open](containerization_app_command) [web page](containerization_app_prompt:web) of the [nginx](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [nginx](container_name) [container](containerization_app_feature) in [chrome](containerization_app_prompt:web)
    - [docker](containerization_app) [container](containerization_app_feature) [cli](containerization_app_prompt:cli) [open](containerization_app_command) for [cluster eleven](container_name) [container](containerization_app_feature) 
    - [start](containerization_app_command) the [web page](containerization_app_prompt:web) for the [service mock](container_name) [container](containerization_app_feature)
    - help me to [open](containerization_app_command) [command line interface](containerization_app_prompt:cli) on [nginx](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [serene shockly](container_name) [container](containerization_app_feature) [cli](containerization_app_prompt:cli)
    - [docker](containerization_app) [container](containerization_app_feature) [cli](containerization_app_prompt:cli) [open](containerization_app_command) for [serene shockly](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [terminal](containerization_app_prompt:cli) on [ic cluster 11](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [docker](containerization_app) [nginx](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [start](containerization_app_command) [rabbit mq](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [open](containerization_app_command) [docker](containerization_app) [service mock](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [open](containerization_app_command) [ic cluster 11](container_name) [container](containerization_app_feature) in [chrome](containerization_app_prompt:web)
    - [start](containerization_app_command) the [cluster eleven](container_name) [container](containerization_app_feature) [terminal](containerization_app_prompt:cli)
    - [start](containerization_app_command) the [web page](containerization_app_prompt:web) for the [rabbit mq](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [docker](containerization_app) [cli](containerization_app_prompt:cli) for [ic cluster 11](container_name) [container](containerization_app_feature)
    - help me to [open](containerization_app_command) [command line interface](containerization_app_prompt:cli) on [ic cluster 11](container_name) [container](containerization_app_feature)
    - help me to [open](containerization_app_command) [command line interface](containerization_app_prompt:cli) on [serene shockly](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) a [bash terminal](containerization_app_prompt:cli) for the [cluster eleven](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - [start](containerization_app_command) [kafka](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [start](containerization_app_command) [command prompt](containerization_app_prompt:cli) for the [serene shockly](container_name) [container](containerization_app_feature)
    - i want to [open](containerization_app_command) a [cli](containerization_app_prompt:cli) for [nginx](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [service mock](container_name) [container](containerization_app_feature) [cli](containerization_app_prompt:cli)
    - [open](containerization_app_command) the [consul](container_name) [container](containerization_app_feature) in [chrome browser](containerization_app_prompt:web) 
    - i want to [open](containerization_app_command) a [cli](containerization_app_prompt:cli) for [cluster eleven](container_name) [container](containerization_app_feature)
    - we need to [start](containerization_app_command) the [terminal](containerization_app_prompt:cli) on the [nginx](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) [command prompt](containerization_app_prompt:cli) for the [rabbit mq](container_name) [container](containerization_app_feature)
    - [docker](containerization_app) [container](containerization_app_feature) [cli](containerization_app_prompt:cli) [open](containerization_app_command) for [ic cluster 11](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) a [bash terminal](containerization_app_prompt:cli) for the [nginx](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - we need to [start](containerization_app_command) the [terminal](containerization_app_prompt:cli) on the [cluster](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) [ic cluster 11](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [open](containerization_app_command) [web page](containerization_app_prompt:web) of the [rabbit](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [nginx](container_name) [container](containerization_app_feature) [command line interface](containerization_app_prompt:cli)
    - please [start](containerization_app_command) [command line interface](containerization_app_prompt:cli) for the [cluster](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - [open](containerization_app_command) [rabbit mq](container_name) [container](containerization_app_feature) [command line interface](containerization_app_prompt:cli)
    - [open](containerization_app_command) [cluster](container_name) [container](containerization_app_feature) in [chrome](containerization_app_prompt:web)
    - [launch](containerization_app_command) the [nginx](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [start](containerization_app_command) the [web page](containerization_app_prompt:web) for the [nginx](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [web page](containerization_app_prompt:web) for the [cluster](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [web page](containerization_app_prompt:web) of the [cluster](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [terminal](containerization_app_prompt:cli) on [rabbit](container_name) [container](containerization_app_feature)
    - [docker](containerization_app) [container](containerization_app_feature) [cli](containerization_app_prompt:cli) [open](containerization_app_command) for [kafka](container_name) [container](containerization_app_feature) 
    - [launch](containerization_app_command) the [cluster](container_name) [container](containerization_app_feature) in [google](containerization_app_prompt:web)
    - [open](containerization_app_command) [docker](containerization_app) [cli](containerization_app_prompt:cli) for [cluster eleven](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [web page](containerization_app_prompt:web) of the [serene shockly](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [terminal](containerization_app_prompt:cli) on [serene shockly](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [service mock](container_name) [container](containerization_app_feature) in [chrome](containerization_app_prompt:web)
    - [open](containerization_app_command) [docker](containerization_app) [cli](containerization_app_prompt:cli) for [rabbit mq](container_name) [container](containerization_app_feature)
    - [launch](containerization_app_command) the [nginx](container_name) [container](containerization_app_feature) in [google](containerization_app_prompt:web)
    - [open](containerization_app_command) [web page](containerization_app_prompt:web) of the [kafka](container_name) [container](containerization_app_feature)
    - [launch](containerization_app_command) the [rabbit](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [launch](containerization_app_command) the [service mock](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - please [launch](containerization_app_command) the web page of the [kafka](container_name) [container](containerization_app_feature) in [google chrome](containerization_app_prompt:web)
    - [start](containerization_app_command) the [service mock](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [open](containerization_app_command) [cluster eleven](container_name) [container](containerization_app_feature) in [chrome](containerization_app_prompt:web)
    - we need to [start](containerization_app_command) the [terminal](containerization_app_prompt:cli) on the [rabbit](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [kafka](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [start](containerization_app_command) the [rabbit mq](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - please [launch](containerization_app_command) the web page of the [consul](container_name) [container](containerization_app_feature) in [google chrome](containerization_app_prompt:web)
    - we need to [start](containerization_app_command) the [terminal](containerization_app_prompt:cli) on the [service mock](container_name) [container](containerization_app_feature)
    - [launch](containerization_app_command) the [serene shockly](container_name) [container](containerization_app_feature) in [google](containerization_app_prompt:web)
    - [docker](containerization_app) [container](containerization_app_feature) [cli](containerization_app_prompt:cli) [open](containerization_app_command) for [consul](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) the [cluster eleven](container_name) [container](containerization_app_feature) in [chrome browser](containerization_app_prompt:web) 
    - [open](containerization_app_command) [terminal](containerization_app_prompt:cli) on [nginx](container_name) [container](containerization_app_feature)
    - [launch](containerization_app_command) the [service mock](container_name) [container](containerization_app_feature) in [google](containerization_app_prompt:web)
    - [open](containerization_app_command) [cluster](container_name) [container](containerization_app_feature) [command line interface](containerization_app_prompt:cli)
    - [open](containerization_app_command) [cluster eleven](container_name) [container](containerization_app_feature) [command line interface](containerization_app_prompt:cli)
    - [open](containerization_app_command) [docker](containerization_app) [cli](containerization_app_prompt:cli) for [nginx](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [web page](containerization_app_prompt:web) for the [kafka](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) a [bash terminal](containerization_app_prompt:cli) for the [ic cluster 11](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - [start](containerization_app_command) [rabbit](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [launch](containerization_app_command) the [cluster](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - i want to [open](containerization_app_command) a [cli](containerization_app_prompt:cli) for [kafka](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) a [bash terminal](containerization_app_prompt:cli) for the [rabbit mq](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - [docker](containerization_app) [container](containerization_app_feature) [cli](containerization_app_prompt:cli) [open](containerization_app_command) for [rabbit](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [web page](containerization_app_prompt:web) of the [service mock](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [web page](containerization_app_prompt:web) of the [consul](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [docker](containerization_app) [serene shockly](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [launch](containerization_app_command) the [rabbit mq](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [open](containerization_app_command) [terminal](containerization_app_prompt:cli) on [rabbit mq](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) [command prompt](containerization_app_prompt:cli) for the [cluster eleven](container_name) [container](containerization_app_feature)
    - please [launch](containerization_app_command) the web page of the [rabbit mq](container_name) [container](containerization_app_feature) in [google chrome](containerization_app_prompt:web)
    - [open](containerization_app_command) [docker](containerization_app) [ic cluster 11](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [open](containerization_app_command) the [serene shockly](container_name) [container](containerization_app_feature) in [chrome browser](containerization_app_prompt:web) 
    - [open](containerization_app_command) [web page](containerization_app_prompt:web) of the [rabbit mq](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) [nginx](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [launch](containerization_app_command) the [rabbit mq](container_name) [container](containerization_app_feature) in [google](containerization_app_prompt:web)
    - i want to [open](containerization_app_command) a [cli](containerization_app_prompt:cli) for [service mock](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [rabbit](container_name) [container](containerization_app_feature) [terminal](containerization_app_prompt:cli)
    - [start](containerization_app_command) the [serene shockly](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [start](containerization_app_command) the [web page](containerization_app_prompt:web) for the [serene shockly](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [docker](containerization_app) [consul](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [launch](containerization_app_command) the [consul](container_name) [container](containerization_app_feature) in [google](containerization_app_prompt:web)
    - help me to [open](containerization_app_command) [command line interface](containerization_app_prompt:cli) on [service mock](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [docker](containerization_app) [cli](containerization_app_prompt:cli) for [kafka](container_name) [container](containerization_app_feature)
    - i want to [open](containerization_app_command) a [cli](containerization_app_prompt:cli) for [cluster](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) [command prompt](containerization_app_prompt:cli) for the [service mock](container_name) [container](containerization_app_feature)
    - [launch](containerization_app_command) the [rabbit](container_name) [container](containerization_app_feature) in [google](containerization_app_prompt:web)
    - help me to [open](containerization_app_command) [command line interface](containerization_app_prompt:cli) on [rabbit](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [terminal](containerization_app_prompt:cli) on [service mock](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [rabbit](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - i want to [open](containerization_app_command) a [cli](containerization_app_prompt:cli) for [ic cluster 11](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [kafka](container_name) [container](containerization_app_feature) in [chrome](containerization_app_prompt:web)
    - [open](containerization_app_command) a [bash terminal](containerization_app_prompt:cli) for the [rabbit](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - [open](containerization_app_command) [rabbit mq](container_name) [container](containerization_app_feature) in [chrome](containerization_app_prompt:web)
    - i want to [open](containerization_app_command) a [cli](containerization_app_prompt:cli) for [rabbit](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [kafka](container_name) [container](containerization_app_feature) [cli](containerization_app_prompt:cli)
    - [start](containerization_app_command) [command prompt](containerization_app_prompt:cli) for the [nginx](container_name) [container](containerization_app_feature)
    - please [start](containerization_app_command) [command line interface](containerization_app_prompt:cli) for the [service mock](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - [start](containerization_app_command) [command prompt](containerization_app_prompt:cli) for the [ic cluster 11](container_name) [container](containerization_app_feature)
    - please [start](containerization_app_command) [command line interface](containerization_app_prompt:cli) for the [serene shockly](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - [open](containerization_app_command) the [service mock](container_name) [container](containerization_app_feature) in [chrome browser](containerization_app_prompt:web) 
    - [open](containerization_app_command) [serene shockly](container_name) [container](containerization_app_feature) [command line interface](containerization_app_prompt:cli)
    - [open](containerization_app_command) [rabbit](container_name) [container](containerization_app_feature) [command line interface](containerization_app_prompt:cli)
    - [open](containerization_app_command) the [cluster](container_name) [container](containerization_app_feature) in [chrome browser](containerization_app_prompt:web) 
    - [start](containerization_app_command) the [nginx](container_name) [container](containerization_app_feature) [terminal](containerization_app_prompt:cli)
    - [launch](containerization_app_command) the [ic cluster 11](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - we need to [start](containerization_app_command) the [terminal](containerization_app_prompt:cli) on the [rabbit mq](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [docker](containerization_app) [cluster](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - we need to [start](containerization_app_command) the [terminal](containerization_app_prompt:cli) on the [serene shockly](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [ic cluster 11](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [start](containerization_app_command) the [cluster eleven](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [open](containerization_app_command) [terminal](containerization_app_prompt:cli) on [control-center](container_name) [container](containerization_app_feature)
    - [start](containerization_app_command) the [control center](container_name) [container](containerization_app_feature) [cli](containerization_app_prompt:cli)   
    - [launch](containerization_app_command) the [control-center](container_name) [container](containerization_app_feature) in [google](containerization_app_prompt:web)
    - please [launch](containerization_app_command) the web page of the [control-center](container_name) [container](containerization_app_feature) in [google chrome](containerization_app_prompt:web)
    - [start](containerization_app_command) the [web page](containerization_app_prompt:web) for the [control-center](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) [control-center](container_name) [container](containerization_app_feature) in [chrome](containerization_app_prompt:web)
    - [launch](containerization_app_command) the [control-center](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - [open](containerization_app_command) [web page](containerization_app_prompt:web) of the [control-center](container_name) [container](containerization_app_feature)
    - [open](containerization_app_command) the [control-center](container_name) [container](containerization_app_feature) in [chrome browser](containerization_app_prompt:web) 
    - [start](containerization_app_command) [control-center](container_name) [container](containerization_app_feature) in [browser](containerization_app_prompt:web)
    - we need to [start](containerization_app_command) the [terminal](containerization_app_prompt:cli) on the [control center](container_name) [container](containerization_app_feature)
    - help me to [open](containerization_app_command) [command line interface](containerization_app_prompt:cli) on [control-center](container_name) [container](containerization_app_feature)
    - please [start](containerization_app_command) [command line interface](containerization_app_prompt:cli) for the [control-center](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - i want to [open](containerization_app_command) a [cli](containerization_app_prompt:cli) for [control-center](container_name) [container](containerization_app_feature)
    - please [start](containerization_app_command) [command line interface](containerization_app_prompt:cli) for the [control-center](container_name) [container](containerization_app_feature) in [docker](containerization_app)
    - [open](containerization_app_command) [docker](containerization_app) [cli](containerization_app_prompt:cli) for [control-center](container_name) [container](containerization_app_feature)
    

- intent: container_index
  examples: |
    - [first](container_idx:numbers)
    - [second](container_idx:numbers)
    - [third](container_idx:numbers)
    - [forth](container_idx:numbers)
    - [fifth](container_idx:numbers)
    - [sixth](container_idx:numbers)
    - [seventh](container_idx:numbers)
    - [eighth](container_idx:numbers)
    - [nineth](container_idx:numbers)
    - [tenth](container_idx:numbers)
  
- synonym: numbers
  examples: |
    - one
    - two
    - three
    - four
    - five
    - six
    - seven
    - eight
    - nine
    - ten

- synonym: cli
  examples: |
    - command line interface
    - cli
    - terminal
    - command prompt
    - bash
    - shell

- synonym: web
  examples: |
    - google
    - google chrome
    - web page
    - web
    - browser


- intent: docker_aws_login
  examples: |
    - [login](auth_action) to [aws](cloud_service)
    - [authenticate](auth_action) docker to [aws](cloud_service)
    - please [connect](auth_action) to [aws](cloud_service)
    - [connect](auth_action) to [aws](cloud_service)
    - [login](auth_action) [aws](cloud_service)
    - [authenticate](auth_action) [aws](cloud_service)
    - [connect](auth_action) [aws](cloud_service)
    - [aws](cloud_service) [login](auth_action)
    - [aws](cloud_service) [authenticate](auth_action)
    - let's [connect](auth_action) with [aws](cloud_service)
    - [authenticate](auth_action)
    - [login](auth_action)


- intent: pull_docker_image
  examples: |
    - [pull](containerization_app_command) [docker](containerization_app) [image](containerization_app_feature) from [aws](cloud_service)
    - [pull](containerization_app_command) [docker](containerization_app) [image](containerization_app_feature)
    - [download](containerization_app_command) [image](containerization_app_feature)
    - [fetch](containerization_app_command) [image](containerization_app_feature) from [aws](cloud_service)
    - [docker](containerization_app) [image](containerization_app_feature) [pull](containerization_app_command)
    - [pull](containerization_app_command) [image](containerization_app_feature)
    - [fetch](containerization_app_command) the [image](containerization_app_feature) from [aws](cloud_service)
    - [pull](containerization_app_command) [docker](containerization_app) [image](containerization_app_feature) from [aws](cloud_service)
    - [fetch](containerization_app_command) the [docker](containerization_app) [image](containerization_app_feature)


- intent: display_container_log
  examples: |
    - [show](containerization_app_command) me [container](containerization_app_feature) [logs](logging)
    - [display](containerization_app_command) [logs](logging) for [container](containerization_app_feature)
    - [container](containerization_app_feature) [logs](logging)
    - [display](containerization_app_command) [container](containerization_app_feature) [logs](logging)
    - [show](containerization_app_command) the [logs](logging) of the [container](containerization_app_feature)
    - [logs](containerization_app_command) for [container](containerization_app_feature)
    - [display](containerization_app_command) [logs](logging)
    - [logs](logging)
    - please [show](containerization_app_command) me the [container](containerization_app_feature) [logs](logging)
    - [watch](containerization_app_command) the [container](containerization_app_feature) [logs](logging)
    - [see](containerization_app_command) the [container](containerization_app_feature) [logs](logging)
    - [show](containerization_app_command) me [logs](logging)
    - [container](containerization_app_feature) [logs](logging)